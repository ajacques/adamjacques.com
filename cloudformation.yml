Parameters:
  DomainName:
    Type: String
    Description: Domain name for the CDN + Certificate
Resources:
  WebsiteFileS3Bucket:
    Type: AWS::S3::Bucket
    Properties:
      AccessControl: Private
  StaticS3Permission:
    Type: AWS::S3::BucketPolicy
    DependsOn:
      - WebsiteFileS3Bucket
    Properties:
      Bucket:
        Ref: WebsiteFileS3Bucket
      PolicyDocument:
        Statement:
          - Action:
              - s3:GetObject
            Effect: Allow
            Resource:
              Fn::Sub: arn:aws:s3:::${WebsiteFileS3Bucket}/web_content/*
            Condition:
              Bool:
                aws:SecureTransport: 'true'
            Principal:
              AWS:
                Fn::Sub: arn:aws:iam::cloudfront:user/CloudFront Origin Access Identity ${CloudFrontAccessIdentity}
  Certificate:
    Type: AWS::CertificateManager::Certificate
    Properties:
      DomainName:
        Ref: DomainName
      ValidationMethod: DNS
  CloudFrontAccessIdentity:
    Type: AWS::CloudFront::CloudFrontOriginAccessIdentity
    Properties:
      CloudFrontOriginAccessIdentityConfig:
        Comment: AdamJacques.com
  ExternalCloudFront:
    Type: AWS::CloudFront::Distribution
    Properties:
      DistributionConfig:
        Aliases:
          - Ref: DomainName
        DefaultCacheBehavior:
          TargetOriginId: staticAssetOrigin
          ViewerProtocolPolicy: redirect-to-https
          ForwardedValues:
            QueryString: false
            Cookies:
              Forward: whitelist
              WhitelistedNames:
                - rack.session
        DefaultRootObject: index.html
        Enabled: true
        HttpVersion: http2
        Origins:
          - Id: staticAssetOrigin
            DomainName:
              Fn::Sub: ${WebsiteFileS3Bucket}.s3.amazonaws.com
            OriginPath: /web_content
            S3OriginConfig:
              OriginAccessIdentity:
                Fn::Sub: origin-access-identity/cloudfront/${CloudFrontAccessIdentity}
        PriceClass: PriceClass_100
        ViewerCertificate:
          AcmCertificateArn:
            Ref: Certificate
          SslSupportMethod: sni-only
  AssetUploadUser:
    Type: AWS::IAM::User
    Properties:
      Policies:
        - PolicyName: CanUploadFiles
          PolicyDocument:
            Version: '2012-10-17'
            Statement:
              - Action:
                  - s3:PutObject
                Effect: Allow
                Resource:
                  Fn::Sub: arn:aws:s3:::${WebsiteFileS3Bucket}/web_content/*
                Condition:
                  Bool:
                    aws:SecureTransport: 'true'
Outputs:
  WebsiteS3Bucket:
    Description: Stores static content for website
    Value:
      Ref: WebsiteFileS3Bucket
  URL:
    Description: Raw CloudFront hostname
    Value:
      Fn::GetAtt:
        - ExternalCloudFront
        - DomainName